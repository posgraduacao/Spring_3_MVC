<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       	 xmlns:jee="http://www.springframework.org/schema/jee"
       	 xmlns:tx="http://www.springframework.org/schema/tx"
       	 xmlns:jdbc="http://www.springframework.org/schema/jdbc"
         xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
           http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		   http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd">
		   

	<!-- 
		NO arquivo context.xml do tomcat adicionar
		
		<Resource name="jdbc/PosUP" auth="Container" type="javax.sql.DataSource"
               maxActive="100" 
               maxIdle="30" 
               maxWait="10000"
               username="WebApplication" 
               password="4b4c4x1" 
               driverClassName="com.mysql.jdbc.Driver"
               url="jdbc:mysql://localhost:3306/posup"/>
	
	<jee:jndi-lookup id="dataSource" jndi-name="jdbc/jdbcName" resource-ref="true" />
	-->	   
	
	<!-- POOL DE CONEXAO COM O BANCO
		C3P0 e uma biblioteca auxiliar em java que faz o controle das conexoes com o BD
	-->

	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close" >
		<property name="driverClass" 	value="${database.driverClassName}" />
		<property name="jdbcUrl" 		value="${database.url}" />
		<property name="user" 			value="${database.username}" />
		<property name="password" 		value="${database.password}" />
	</bean>
	
	<!-- 
		ignore-failures=true : Vai executar o script ate onde conseguir e quando der erro para.
		ignore-failures=fase : Executa o script, mas se der erro, faz rollback e dar erro na aplicacao
	
	-->
	<jdbc:initialize-database data-source="dataSource" ignore-failures="ALL" enabled="true">
		<!-- 
		<jdbc:script location="classpath*:script1.sql" />
		<jdbc:script location="classpath*:script1.sql" />
		-->
		<jdbc:script location="classpath*:import.sql" />
	</jdbc:initialize-database>
	
	
	<bean id="entityManagerFactory" 	class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" 	ref="dataSource" />
		<property name="packagesToScan" value="br.up.pos.spring.entity" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
		</property>
		<property name="jpaProperties">
			<props>
				<!--
					<prop key="hibernate.hbm2ddl.auto">validate | update | create | create-drop</prop>
					- validate: Valida o Schema, nao faz alteracoes no BD
					- update: Atualiza o banco se verificar que alguma tabela/coluna eh novo - nao apaga NADA
					- create: Cria um novo BD destruindo o que existia 
					- create-drop: Cria um novo BD destruindo o que existia e apaga quando para o TOMCAT
				 -->
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.dialect">${database.platform}</prop>
				<prop key="hibernate.format_sql">${database.formatSql}</prop>
				<prop key="hibernate.show_sql">${database.showSql}</prop>
				<prop key="hibernate.generate_statistics">false</prop>

			</props>
		</property>
	</bean>

	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" 	ref="entityManagerFactory"/>
   </bean>

    <tx:annotation-driven transaction-manager="transactionManager"/>

	<bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor"/>
	
</beans>
